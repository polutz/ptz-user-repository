{"version":3,"sources":["../dist-esnext/userRepository.test.js"],"names":["MONGO_URL","db","userRepository","describe","beforeEach","connect","it","user","displayName","email","userName","save","getById","id","userDb"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;;;;;AACA,IAAMA,YAAY,gCAAlB;AACA,IAAIC,EAAJ,EAAQC,cAAR;AACAC,SAAS,gBAAT,EAA2B,YAAM;AAC7BC,yDAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACI,qBAAYC,OAAZ,CAAoBL,SAApB,CADJ;;AAAA;AACPC,0BADO;;AAEPC,yCAAiB,6BAAmBD,EAAnB,CAAjB;;AAFO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;AAIAE,aAAS,MAAT,EAAiB,YAAM;AACnBG,WAAG,QAAH,4CAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AACHC,gCADG,GACI,wBAAS;AAClBC,6CAAa,QADK;AAElBC,uCAAO,uBAFW;AAGlBC,0CAAU;AAHQ,6BAAT,CADJ;AAAA;AAAA,mCAMHR,eAAeS,IAAf,CAAoBJ,IAApB,CANG;;AAAA;AAAA;AAAA,mCAOYL,eAAeU,OAAf,CAAuBL,KAAKM,EAA5B,CAPZ;;AAAA;AAOHC,kCAPG;;AAQT,+CAAGA,MAAH;AACA,kDAAMA,OAAOD,EAAb,EAAiBN,KAAKM,EAAtB;AACA,kDAAMC,OAAON,WAAb,EAA0BD,KAAKC,WAA/B;AACA,kDAAMM,OAAOL,KAAb,EAAoBF,KAAKE,KAAzB;AACA,kDAAMK,OAAOJ,QAAb,EAAuBH,KAAKG,QAA5B;;AAZS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAb;AAcAJ,WAAG,QAAH;AACH,KAhBD;AAiBAH,aAAS,MAAT,EAAiB,YAAM;AACnBG,WAAG,YAAH;AACAA,WAAG,YAAH;AACH,KAHD;AAIAH,aAAS,sCAAT,EAAiD,YAAM;AACnDG,WAAG,eAAH;AACAA,WAAG,kBAAH;AACAA,WAAG,WAAH;AACH,KAJD;AAKAH,aAAS,sBAAT,EAAiC,YAAM;AACnCG,WAAG,eAAH;AACAA,WAAG,kBAAH;AACAA,WAAG,WAAH;AACH,KAJD;AAKH,CApCD;AAqCA","file":"userRepository.test.js","sourcesContent":["import { MongoClient } from 'mongodb';\nimport { equal, ok } from 'ptz-assert';\nimport { User } from 'ptz-user-domain';\nimport UserRepository from './userRepository';\nconst MONGO_URL = 'mongodb://localhost:27017/test';\nvar db, userRepository;\ndescribe('UserRepository', () => {\n    beforeEach(async () => {\n        db = await MongoClient.connect(MONGO_URL);\n        userRepository = new UserRepository(db);\n    });\n    describe('save', () => {\n        it('insert', async () => {\n            const user = new User({\n                displayName: 'Angelo',\n                email: 'angeloocana@gmail.com',\n                userName: 'angeloocana'\n            });\n            await userRepository.save(user);\n            const userDb = await userRepository.getById(user.id);\n            ok(userDb);\n            equal(userDb.id, user.id);\n            equal(userDb.displayName, user.displayName);\n            equal(userDb.email, user.email);\n            equal(userDb.userName, user.userName);\n        });\n        it('update');\n    });\n    describe('find', () => {\n        it('limit by 3');\n        it('limit by 5');\n    });\n    describe('getOtherUsersWithSameUserNameOrEmail', () => {\n        it('find by email');\n        it('find by userName');\n        it('not found');\n    });\n    describe('getByUserNameOrEmail', () => {\n        it('find by email');\n        it('find by userName');\n        it('not found');\n    });\n});\n//# sourceMappingURL=userRepository.test.js.map"]}